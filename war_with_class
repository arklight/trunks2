#!/usr/bin/env python

import random


class Cards(object):
    card_value = ['A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2']
    deck = card_value * 4

    def __init__(self):
        self.deck = range(1, 53)

    def build_card(self):
        self.card_value = random.choice(self.deck)

    def get_value(self):
        print self.get_value
        return self.get_value


print Cards

#def deal_cards(num_user):
#    num_user = 2


#    player_hand =   / num_user
#    self.card = Cards()

#return self.myDice[0].value

#    cards_per_hand = Cards.get_value(self) / num_user
#    print Cards[:cards_per_hand], Cards[cards_per_hand:]
#    return Cards[:cards_per_hand], Cards[cards_per_hand:]


#def main():
#    deal_cards(2)


#if __name__ == '__main__':
#    main()

#def face_type():
#    faces = Deck.list_faces(face)
#    cards = Deck.list_cards(card)
#    for face in faces:
#        for card_value in cards
#
#def get_next_card():
#	{
#		return cards.remove(cards.size() - 1);
#	}
#}
#
#public class Card
#{
#	final int rank;
#	final Face face;
#	public Card(int rank, Face face)
#	{
#		this.rank = rank;
#		this.face = face;
#	}
#
#	public int getRank()
#	{
#		return this.rank;
#	}
#
#	public Face getFace()
#	{
#		return this.face;
#	}
#}
#public enum Face
#{
#	CLUB,
#	SPADE,
#	DIAMOND,
#	HEART
#
#public void main(String[] args)
#{
#	CardDeck deck = new CardDeck();
#	//This is where the turns would be implemented and handling of the objects
#}
#

#card_suits = ['of clubs', 'of spades', 'of diamonds', 'of hearts']
#card_value = ['A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6', '5', '4', '3', '2']
#card_numbers = [1-13]
#    number = cards.range(len(card_numbers))
#    suit = cards.range(len(card_suits))
#    card_suits = ['of clubs', 'of spades', 'of diamonds', 'of hearts']
#   def build_card(self):
#       number = self.cards.pop(self, 0)
#        suit = self.cards.pop(self, 0)
#        while number:
#            cards = random.choice(Cards(self, deck))
#            return